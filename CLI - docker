# คู่มือคำสั่ง Docker ภาษาไทย

## คำสั่งพื้นฐาน

**เริ่มต้น Docker daemon**
docker -d
```

**ขอความช่วยเหลือสำหรับ Docker (สามารถใช้ --help กับคำสั่งย่อยทั้งหมด)**
docker --help
```

**แสดงข้อมูลระบบโดยรวม**
docker info
```

## การจัดการ Images

**สร้าง Image จาก Dockerfile**
docker build -t <ชื่อ_image> .
```

**สร้าง Image จาก Dockerfile โดยไม่ใช้ cache**
docker build -t <ชื่อ_image> . --no-cache
```

**แสดงรายการ images ในเครื่อง**
docker images
```

**ลบ Image**
docker rmi <ชื่อ_image>
```

**ลบ images ที่ไม่ได้ใช้งานทั้งหมด**
docker image prune
```

## การจัดการ Docker Hub

**เข้าสู่ระบบ Docker**
docker login -u <ชื่อผู้ใช้>
```

**อัปโหลด image ไปยัง Docker Hub**
docker push <ชื่อผู้ใช้>/<ชื่อ_image>
```

**ค้นหา image ใน Hub**
docker search <ชื่อ_image>
```

**ดาวน์โหลด image จาก Docker Hub**
docker pull <ชื่อ_image>
```

## การจัดการ Containers

**สร้างและรัน container จาก image พร้อมกำหนดชื่อ**
docker run --name <ชื่อ_container> <ชื่อ_image>
```

**รัน container และเชื่อมต่อ port ของ container กับ host**
docker run -p <port_host>:<port_container> <ชื่อ_image>
```

**รัน container ในพื้นหลัง**
docker run -d <ชื่อ_image>
```

**เริ่มหรือหยุด container ที่มีอยู่**
docker start|stop <ชื่อ_container> (หรือ <container-id>)
```

**ลบ container ที่หยุดทำงานแล้ว**
docker rm <ชื่อ_container>
```

**เปิด shell ภายใน container ที่กำลังทำงาน**
docker exec -it <ชื่อ_container> sh
```

**ดูและติดตาม logs ของ container**
docker logs -f <ชื่อ_container>
```

**ตรวจสอบรายละเอียดของ container ที่กำลังทำงาน**
docker inspect <ชื่อ_container> (หรือ <container_id>)
```

**แสดงรายการ containers ที่กำลังทำงาน**
docker ps
```

**แสดงรายการ containers ทั้งหมด (ทำงานและหยุดทำงาน)**
docker ps --all
```

**ดูสถิติการใช้ทรัพยากร**
docker container stats
```

## ความรู้พื้นฐาน

### Docker คืออะไร?
Docker ให้ความสามารถในการแพ็กเกจและรันแอปพลิเคชันในสภาพแวดล้อมที่แยกแยะอย่างหลวม ๆ ที่เรียกว่า container การแยกแยะและความปลอดภัยนี้ช่วยให้คุณสามารถรัน containers หลายตัวพร้อมกันบน host เดียวกัน Containers มีน้ำหนักเบาและมีทุกสิ่งที่จำเป็นในการรันแอปพลิเคชัน ดังนั้นคุณไม่จำเป็นต้องพึ่งพาสิ่งที่ติดตั้งอยู่ใน host ในปัจจุบัน

### Images
Docker images เป็นแพ็กเกจซอฟต์แวร์ที่มีน้ำหนักเบา สามารถรันได้อย่างอิสระ และสามารถเรียกใช้งานได้ ซึ่งรวมทุกสิ่งที่จำเป็นสำหรับการรันแอปพลิเคชัน: โค้ด, runtime, เครื่องมือระบบ, ไลบรารี่ระบบ และการตั้งค่า

### Docker Hub
Docker Hub เป็นบริการที่ Docker จัดให้สำหรับการค้นหาและแบ่งปัน container images กับทีมของคุณ เรียนรู้เพิ่มเติมและค้นหา images ได้ที่ https://hub.docker.com

### Containers
Container คือ runtime instance ของ docker image Container จะรันแบบเดียวกันเสมอ ไม่ว่าโครงสร้างพื้นฐานจะเป็นอย่างไร Containers แยกซอฟต์แวร์ออกจากสภาพแวดล้อมและรับประกันว่าจะทำงานได้อย่างสม่ำเสมอ แม้จะมีความแตกต่างระหว่าง development และ staging

## การติดตั้ง
Docker Desktop พร้อมใช้งานสำหรับ Mac, Linux และ Windows ที่ https://docs.docker.com/desktop

## ตัวอย่างและเอกสาร
- ดูตัวอย่างโปรเจกต์ที่ใช้ Docker: https://github.com/docker/awesome-compose
- เช็คเอกสารของเราสำหรับข้อมูลการใช้ Docker: https://docs.docker.com
